version: '3.8'

services:
  stockelper-llm-server:
    container_name: stockelper-llm-server
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ${HOME}/.cache/huggingface/hub:/root/.cache/huggingface/hub
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      stockelper-db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://stockelper:<DB_PASSWORD>@stockelper-db:5432/stockelper
      ASYNC_DATABASE_URL: postgresql+asyncpg://stockelper:<DB_PASSWORD>@stockelper-db:5432/stockelper
      CHECKPOINT_DATABASE_URI: postgresql://stockelper:<DB_PASSWORD>@stockelper-db:5432/checkpoint
      
      # Cloud Langfuse Configuration (replace with your cloud instance)
      LANGFUSE_HOST: <YOUR_LANGFUSE_CLOUD_HOST>
      LANGFUSE_PUBLIC_KEY: <YOUR_LANGFUSE_PUBLIC_KEY>
      LANGFUSE_SECRET_KEY: <YOUR_LANGFUSE_SECRET_KEY>
      
      # API Configuration
      OPENAI_API_KEY: <YOUR_OPENAI_API_KEY>
      ANTHROPIC_API_KEY: <YOUR_ANTHROPIC_API_KEY>
      TAVILY_API_KEY: <YOUR_TAVILY_API_KEY>
      
      # Neo4j Configuration
      NEO4J_URI: <YOUR_NEO4J_URI>
      NEO4J_USERNAME: <YOUR_NEO4J_USERNAME>
      NEO4J_PASSWORD: <YOUR_NEO4J_PASSWORD>
      
      # MongoDB Configuration
      MONGODB_URI: <YOUR_MONGODB_URI>
      
      # KIS API Configuration
      KIS_APP_KEY: <YOUR_KIS_APP_KEY>
      KIS_APP_SECRET: <YOUR_KIS_APP_SECRET>
      KIS_ACCESS_TOKEN: <YOUR_KIS_ACCESS_TOKEN>
      
      # Server Configuration
      REQUESTS_TIMEOUT: 300
      SERVER_PORT: 8000
    networks:
      - stockelper
    restart: unless-stopped

  stockelper-db:
    image: postgres:15
    container_name: stockelper-db
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stockelper"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      POSTGRES_USER: stockelper
      POSTGRES_PASSWORD: <DB_PASSWORD>
      POSTGRES_DB: stockelper
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - stockelper_postgres_data:/var/lib/postgresql/data
      - ./database/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - stockelper

volumes:
  stockelper_postgres_data:
    driver: local

networks:
  stockelper:
    driver: bridge
